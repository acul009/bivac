#!/bin/bash

# Prepare environment

test_valid=true
export AWS_ACCESS_KEY_ID=OBQZY3DV6VOEZ9PG6NIM
export AWS_SECRET_ACCESS_KEY=7e88XeX0j3YdB6b1o0zU2GhG0dX6tFMy3Haty

docker run -d --name postgres1 --rm -v postgres1:/var/lib/postgresql postgres:latest
docker run -d --name postgres2 --rm -v postgres2:/var/lib postgres:latest
sleep 10


# Start Bivac
docker run -it --hostname=testing --name testing --rm -v /var/run/docker.sock:/var/run/docker.sock:ro -e BIVAC_TARGET_URL=s3:http://172.17.0.2:9000/bivac-testing/docker -e BIVAC_LOG_LEVEL=$2 -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e RESTIC_PASSWORD=toto $1


# PostgreSQL 1
dump=$(docker run -it --rm -e RESTIC_PASSWORD=toto -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY restic/restic:latest -q -r s3:http://172.17.0.2:9000/bivac-testing/docker/testing/postgres1 dump latest /var/lib/docker/volumes/postgres1/_data/backups/all.sql)
dump=${dump%$'\r'}
if [[ $dump != *"dump complete"* ]]; then
  test_valid=false
fi


# PostgreSQL 2
dump=$(docker run -it --rm -e RESTIC_PASSWORD=toto -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY restic/restic:latest -q -r s3:http://172.17.0.2:9000/bivac-testing/docker/testing/postgres2 dump latest /var/lib/docker/volumes/postgres2/_data/backups/all.sql)
dump=${dump%$'\r'}
if [[ $dump != *"dump complete"* ]]; then
  test_valid=false
fi


if [ "$test_valid" = true ]; then
  echo -e "\e[32m[+] Docker : Restic + Unusual pgsql volume\e[39m"
else
  echo -e "\e[31m[-] Docker : Restic + Unusual pgsql volume\e[39m"
fi

# Clean up environment
docker kill postgres1
docker kill postgres2
docker volume rm postgres1
docker volume rm postgres2
